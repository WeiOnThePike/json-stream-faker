plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group 'com.github.smartnose'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    // JSON Schema validation
    implementation 'com.github.java-json-tools:json-schema-validator:2.2.14'
    implementation 'org.everit.json:org.everit.json.schema:1.5.1'
    
    // JSON processing
    implementation 'org.json:json:20230227'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.0'
    
    // Fake data generation
    implementation 'net.datafaker:datafaker:1.8.1'
    implementation 'org.apache.commons:commons-math3:3.6.1' // For statistical distributions
    
    // Kafka client
    implementation 'org.apache.kafka:kafka-clients:3.4.0'
    
    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.7'
    implementation 'ch.qos.logback:logback-classic:1.4.7'
    
    // CLI argument parsing
    implementation 'info.picocli:picocli:4.7.3' // May be repurposed or removed if fully API driven

    // Javalin for embedded HTTP server
    implementation 'io.javalin:javalin:6.1.3'
    // Javalin uses SLF4J for logging, which is already included (slf4j-api and logback-classic)
    
    // Testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testImplementation 'org.mockito:mockito-core:5.3.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.3.1'
}

application {
    mainClass = 'com.github.smartnose.jsonstreamfaker.JsonStreamFaker'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Main-Class': 'com.github.smartnose.jsonstreamfaker.JsonStreamFaker'
    }
}

shadowJar {
    archiveBaseName.set('json-stream-faker')
    archiveClassifier.set('')
    archiveVersion.set(project.version.toString())
}